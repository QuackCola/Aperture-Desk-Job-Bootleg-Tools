//===================== Copyright (c) Valve Corporation. All Rights Reserved. ======================
//
//==================================================================================================

@include "models_base.fgd"
@include "models_base_breakables.fgd"

@ModelGameData
sphere
{
	transform =
	{
		bone_key = "bonename"
	}
	radius_key = "radius"
	center_key = "center"
}
game_data_list( high_quality_shadows_region_list )
 = high_quality_shadows_region
[
	bonename(model_bone) : "Bone"
	radius(float) [ scale_bone_relative ] : "Radius" : 5
	center(local_point) [ scale_bone_relative ] : "Center" : "0 0 0"

	key_light_target0(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 0" : ""
	key_light_target1(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 1" : ""
	key_light_target2(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 2" : ""
	key_light_target3(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 3" : ""
	key_light_target4(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 4" : ""
	key_light_target5(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 5" : ""
	key_light_target6(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 6" : ""
	key_light_target7(model_attachment) [ group = "Key Light Targets" ]: "Key Light Target 7" : ""
]

@ModelGameData
box
{
	transform =
	{
		bone_key = "bonename"
		origin_key = "offset_origin"
		angles_key = "offset_angles"
	}
	dimensions_key = "dimensions"
}
locator_axis
{
	transform =
	{
		bone_key = "bonename"
		origin_key = "offset_origin"
		angles_key = "offset_angles"
	}
}
= eye_occlusion_renderer
[
	bonename(model_bone) : "Bone"
	dimensions(vector) [ scale_bone_relative ] : "Dimensions" : "12 12 12"
	offset_origin(vector) [ scale_bone_relative ] : "Offset" : "0 0 0"
	offset_angles(angle) : "Angles" : "0 0 0"
]

@ModelGameData = physgun_interactions
[
	has_preferred_carryangles(boolean) : "Has Preferred Carry Angles" : 0
	preferred_carryangles(angle) : "Preferred Carry Angles" : "0 0 0"

	onworldimpact(choices) : "World Impact" : "" : "Behavior when impacting the world" =
	[
		""				:	"Default"
		"stick"			:	"Stick to surface"
		"bloodsplat"	:	"Blood decal"
	]
	
	onfirstimpact(choices) : "On First Impact" : "" : "Behavior when impacting the world" =
	[
		""				:	"Default"
		"break"			:	"Break"
		"paintsplat"	:	"Paint splat"
		"impale"		:	"Impale"
	]
	
	onlaunch(choices) : "On Launch" : "" : "Behavior when launched from gravity gun" =
	[
		""				:	"Default"
		"spin_none"		:	"No Spin"
		"spin_z"		:	"Spin On Z-Axis"
	]
	
	onbreak(choices) : "On Break" : "" : "" =
	[
		""				:	"Default"
		"explode_fire"		:	"Fire Explosion"
		"explode_ice"		:	"Ice Explosion"
	]
	
	damage(choices) : "Impact Damage" : "" : "" =
	[
		""				:	"Default"
		"none"			:	"No Impact Damage"
	]
	
	onpickup(choices) : "On Pickup" : "" : "" =
	[
		""				:	"Default"
		"create_flare"	:	"Create Flare"
	]
	
	allow_overhead(choices) : "Allow Directly Overhead" : "" : "" =
	[
		""				:	"Default (No)"
		"yes"			:	"Yes"
	]
]

@ModelGameData = ai_model_info
[
	AIWalkable(boolean) 	: "AI Walkable" : 0
	blockLOS(boolean) 		: "Block LOS" : 0
]

@ModelGameData = explosion_behavior
[
	explosion_type(choices) : "Explosion Type" : "" : "" =
	[
		""					:	"Inherit Default"
		"default"			:	"Default"
		"grenade"			:	"Grenade"
		"molotov"			:	"Molotov"
		"fireworks"			:	"Fireworks"
		"gascan"			:	"Gasoline Can"
		"gascylinder"		:	"Pressurized Gas Cylinder"
		"explosivebarrel"	:	"Explosive Barrel"
		"electrical"		:	"Electrical"
		"emp"				:	"EMP"
		"shrapnel"			:	"Shrapnel"
		"smoke"				:	"Smoke Grenade"
		"flashbang"			:	"Flashbang"
		"tripmine"			:	"Tripmine"
		"ice"				:	"Ice"
		"none"				:	"None"
		"custom"			:	"Custom"
	]
	explosive_damage(float) : "Explosive Damage" : -1
	explosive_radius(float) : "Explosive Radius" : -1
	explosion_delay(float) : "Explosion Delay (L4D)" : -1
	explosion_buildup(sound) : "Explosion Buildup Sound (L4D)" : ""
	explosion_custom_effect(resource:particle) : "Custom Particle Effect"
	explosion_custom_sound(sound) : "Custom Sound Effect" : ""
]

@ModelGameData = npc_foot_sweep
[
	npc_foot_sweep_enabled(boolean) : "Enable NPC foot sweep" : 1
]

@ModelGameData = nav_data
[
	nav_attribute_avoid(boolean) : "Nav Attrib, Avoid" : 0
]

@ModelGameData = fire_interactions
[	
	flammable(choices) : "Flammable" : "" : "" =
	[
		""				:	"Default (No)"
		"yes"			:	"Yes"
	]
	explosive_resist(choices) : "Explosive Resist" : "" : "" =
	[
		""				:	"Default (No)"
		"yes"			:	"Yes"
	]
	ignite(choices) : "Ignition Criteria" : "" : "" =
	[
		""				:	"Default (No)"
		"halfhealth"	:	"At Half Health"
	]
	melee_immune(choices) : "Melee Immune" : "" : "" =
	[
		""				:	"Default (No)"
		"yes"			:	"Yes"
	]
]

@ModelGameData game_data_list( bodygroup_driven_morph_list ) = bodygroup_driven_morph
[
	bodygroup_name(model_bodygroup) : "bodygroup_name" : ""
	bodygroup_choice(int) : "bodygroup_choice" : ""
	morph_name(model_morphchannel) [report] : "Morph Channel"
]

@ModelGameData game_data_list( materialgroup_driven_morph_list ) = materialgroup_driven_morph
[
	materialgroup_name(materialgroup) : "Material Group" : ""
	morph_name(model_morphchannel) [report] : "Morph Channel"
]

@ModelGameData game_data_list( eye_data_list ) = eye
[
	bonename(model_bone) : "Bone"
	radius(float) : "Radius" : 1
	yaw(float) : "Yaw (Degrees)" : 4
]

@ModelGameData game_data_list( cables_list ) = cable
[
	startattachment(model_attachment) : "Start Attachment"
	endattachment(model_attachment) : "End Attachment"
	width(float) : "Width" : 2
	material(resource:material) : "Material" : "cable/cable"
	numsegments(int) : "Num Segments" : 5
	gravity(bool) : "Gravity" : 1
	length(int) : "Length" : 0
	texturescale(float) : "Texture Scale" : 1
]


@ModelGameData game_data_list( dynamic_interactions ) = dynamic_interaction
[
	name(string) : "Interaction Name"
	trigger(choices) : "Trigger Method" : "auto_in_combat" =
	[
		"in_code"				: "Via Code"					
		"auto_in_combat"		: "Automatically In Combat"	
	]
	origin_relative(vector)		: "Target Origin (relative to me - forward, right, up)"
	origin_max_delta(float)		: "Distance slop (i.e. max distance from target to 'Target Origin' to be considered valid)" : 6
	test_angles_relative(boolean)	: "Test Target Angles" : 1
	angles_relative(angle)		: "Target Angles (relative to me)"
	needs_weapon(choices)		: "Need a weapon" : "no" =
	[
		"no"					: "No"
		"me"					: "This NPC"
		"them"					: "Other NPC (that this NPC is interacting with)"
		"both"					: "Both NPCs"
	]
	weapon_mine(string)			: "Weapon Name (classname of the weapon entity that needs to be carried by this NPC)"
	weapon_theirs(string)		: "Other NPC Weapon Name (classname of the weapon entity that needs to be carried by the other NPC)"
	//velocity_relative(vector)	: "UNUSED - Target velocity (relative to me)"

	entry_sequence(string)		: "Entry Sequence name"
	entry_activity(string)		: "Entry Activity name"
	sequence(string)			: "Action Sequence name"
	activity(string)			: "Action Activity name"
	exit_sequence(string)		: "Exit Sequence name"
	exit_activity(string)		: "Exit Activity name"
	loop_in_action(boolean)		: "Loop in Action animation?"
	dont_teleport_at_end(choices) : "Don't Teleport after completion" : "no" =
	[
		"no"					: "No"
		"me"					: "This NPC"
		"them"					: "Other NPC (that this NPC is interacting with)"
		"both"					: "Both NPCs"
	]

	loop_break_on_damage(boolean)		: "Loop Break on Taking Damage?"
	loop_break_on_flashlight(boolean)	: "Loop Break on Flashlight Illumination (Only works in EP1 Alyx Darkness)"	
	delay(float)				: "Delay (refire rate after performing the interaction)" : 10
]

@ModelAnimEvent = AE_IK_SET_LOCK_ROTATION_ALPHA
[
	chainName(string) [report] : "IK Chain Name" : ""
	lockRotationAlpha(float) [report] : "Lock Rotation Alpha" : "0.0"
]

@ModelAnimEvent = AE_SCRIPT_EVENT_FIREEVENT
[
	eventindex(int) [report] : "Event Index" : "0"
]

@ModelAnimEvent = AE_MUZZLEFLASH 
[
	weaponType(string) : "Weapon Type"
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_NPC_MUZZLEFLASH 
[
	weaponType(string) : "Weapon Type"
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_NPC_BECOME_TEMPORARY_RAGDOLL 
[
	auto_unragdoll_duration(float) : "Duration"
	invert_orientation(bool) : "Inverted Recovery (180)" : 0
]

@ModelAnimEvent = AE_NPC_HURT_INTERACTION_PARTNER 
[
	hurt_me(bool) : "Hurt Me" : 0
	hurt_them(bool) : "Hurt Them" : 0
	damage(int): "Damage" : 0
]

@ModelAnimEvent = AE_ZOMBIE_POPHEADCRAB 
[
	bone(model_bone) : "Bone"
	speed(int): "Speed" : 0
]

@ModelAnimEvent = AE_BLIND_ZOMBIE_SNIFF 
[
	last_sniff(bool) : "Last Sniff" : 0
]

@ModelAnimEvent = AE_HIDE_WEAPON 
[
	duration(float) : "Duration" : 0
]

@ModelAnimEvent = AE_SV_DUSTTRAIL 
[
	attachment(model_attachment) : "Attachment"
	duration(float) : "Duration" : 0
	size(float) : "Size" : 0
]

@ModelAnimEvent = AE_NPC_WEAPON_FIRE 
[
	secondary(bool) : "Secondary" : 0
]

@ModelAnimEvent = AE_NPC_WEAPON_SET_SEQUENCE_NUMBER 
[
	sequence_number(int) : "Sequence Number" : 0
]

@ModelAnimEvent = AE_NPC_SET_INTERACTION_CANTDIE 
[
	cantdie(bool) : "Can't Die" : 0
]

@ModelAnimEvent = AE_ZOMBIE_TOGGLE_HEAD 
[
	headtype(int) : "Head Type" : 0
]

@ModelAnimEvent = AE_VORTIGAUNT_START_HEAL_GLOW 
[
	handindex(int) : "Hand Index" : 0
]

@ModelAnimEvent = AE_VORTIGAUNT_START_HURT_GLOW 
[
	handindex(int) : "Hand Index" : 0
]

@ModelAnimEvent = AE_VORTIGAUNT_ZAP_POWERUP 
[
	handindex(int) : "Hand Index" : 0
]

@ModelAnimEvent = AE_VORTIGAUNT_ZAP_SHOOT 
[
	handindex(int) : "Hand Index" : 0
]

@ModelAnimEvent = AE_PASSENGER_PHYSICS_PUSH 
[
	force(float) : "Force" : 0
]

@ModelAnimEvent = AE_MELEE_DAMAGE 
[
	yaw_start(float) : "Yaw Start" : 0
	yaw_end(float) : "Yaw End" : 0
]

@ModelAnimEvent = AE_CL_CREATE_PARTICLE_BRASS 
[
	name(resource:particle) : "Particle"
]

@ModelAnimEvent = AE_IK_ALLOW_PLANE_TILT_NORMAL_UPDATES 
[
	bUpdate(bool) : "Allow Updates" : 0
]

@ModelAnimEvent = AE_IK_SET_MASTER_BLEND_AMOUNT
[
	blendamount(float) : "IK Blend Amount" : 1
	graphparameter(string) : "Graph Parameter Name" : "__name_must_match_whats_in_animgraph_node__"
]

@ModelAnimEvent = AE_IK_SET_CHAIN_BLEND_AMOUNT
[
	chainname(string) [report] : "IK Chain Name" : ""
	blendamount(float) : "IK Blend Amount" : 1
]

@ModelAnimEvent = AE_NPC_WEAPON_DROP 
[
	target(string) : "Target"
]


@ModelAnimEvent = AE_TOSS_ITEM
[
	target(string): "Name of Target Entity"
	fallbacktarget(string): "Name of Fallback Target Entity"
]

@ModelAnimEvent = AE_DOG_THROW 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_DOG_PICKUP 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_DOG_CATCH 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_DOG_PICKUP_NOEFFECT 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_HUNTER_SPRAY_BLOOD 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_COMPANION_PRODUCE_FLARE 
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_STRIDER_SHOOTMINIGUN 
[
	target(string) : "Target"
]

@ModelAnimEvent deprecated() = AE_CL_MFOOTSTEP_LEFT 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_CL_MFOOTSTEP_RIGHT 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_CL_MFOOTSTEP_LEFT_LOUD 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_CL_MFOOTSTEP_RIGHT_LOUD 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_CL_FOOTSTEP_LEFT 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_CL_FOOTSTEP_RIGHT 
[
	sound_base(string) : "Sound Basename"
]

@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_LEFT [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_RIGHT [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_BACK [ ]
@ModelAnimEvent deprecated() = AE_MARINE_FOOTSTEP [ ]
@ModelAnimEvent deprecated() = AE_FOOTSTEP_LEFT [ ]
@ModelAnimEvent deprecated() = AE_FOOTSTEP_RIGHT [ ]
@ModelAnimEvent deprecated() = AE_SV_FOOTSTEP_LEFT [ ]
@ModelAnimEvent deprecated() = AE_SV_FOOTSTEP_RIGHT [ ]
@ModelAnimEvent deprecated() = AE_ANTLION_FOOTSTEP_HEAVY [ ]
@ModelAnimEvent deprecated() = AE_ANTLION_FOOTSTEP_SOFT [ ]
@ModelAnimEvent deprecated() = AE_ANTLION_WALK_FOOTSTEP [ ]
@ModelAnimEvent deprecated() = AE_ANTLIONGUARD_FOOTSTEP_HEAVY [ ]
@ModelAnimEvent deprecated() = AE_ANTLIONGUARD_FOOTSTEP_LIGHT [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_LEFTM [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_RIGHTM [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_BACKM [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_LEFTL [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_RIGHTL [ ]
@ModelAnimEvent deprecated() = AE_STRIDER_FOOTSTEP_BACKL [ ]
@ModelAnimEvent deprecated() = AE_HUNTER_FOOTSTEP_LEFT [ ]
@ModelAnimEvent deprecated() = AE_HUNTER_FOOTSTEP_RIGHT [ ]
@ModelAnimEvent deprecated() = AE_HUNTER_FOOTSTEP_BACK [ ]
@ModelAnimEvent deprecated() = AE_POISONHEADCRAB_FOOTSTEP [ ]

@ModelAnimEvent = AE_NPC_ITEM_PICKUP
[
	name(string) : "Item Name"
]

@ModelAnimEvent = AE_NPC_WEAPON_SET_SEQUENCE_NAME
[
	name(string) : "Sequence Name"
]

@ModelAnimEvent = AE_NPC_WEAPON_SET_ACTIVITY
[
	name(string) : "Activity Name"
]

@ModelAnimEvent = AE_NPC_ADDGESTURE
[
	name(string) : "Gesture Name"
]

@ModelAnimEvent = AE_NPC_RESTARTGESTURE
[
	name(string) : "Gesture Name"
]

@ModelAnimEvent = AE_ALYX_EMPTOOL_ATTACHMENT
[
	name(model_attachment) : "Attachment Name"
]

@ModelAnimEvent = AE_ALYX_EMPTOOL_SEQUENCE
[
	name(string) : "Sequence Name"
]

@ModelAnimEvent = AE_HUNTER_START_EXPRESSION
[
	name(string) : "Name"
]

@ModelAnimEvent = AE_HUNTER_END_EXPRESSION
[
	name(string) : "Name"
]

@ModelAnimEvent = AE_WPN_PLAYWPNSOUND
[
	name(string) : "Sound Category"
]

@ModelAnimEvent = AE_MANTLE_LEAP
[
	attachment(model_attachment) : "Attachment"
]

@ModelAnimEvent = AE_MELEE_START_COLLISION_DAMAGE
[
	value(string) : "Melee Options"
]

@ModelAnimEvent = AE_KEYFIELD_SOUND
[
	name(string) : "Keyfield Sound"
]

@ModelAnimEvent = AE_ACTION_ALLOW_COMBO
[
	name(string) : "Combo"
]

@ModelAnimEvent = AE_ACTION_PREVENT_COMBO
[
	name(string) : "Combo"
]

@ModelAnimEvent = AE_ACTION_SET_TURN_RATE_SCALE
[
	turn_rate(float) : "Turn Rate"
]

@ModelAnimEvent = AE_REVIVER_SET_DEST
[
	dest(choices) : "Destination" : 0 =
	[
		-1 : "Random"
		0 : "Chest"
		1 : "Head"
		2 : "Left arm"
		3 : "Right arm"
		4 : "Left leg"
		5 : "Right leg"
	]
]

@ModelAnimEvent = AE_REVIVER_ZAP_TARGET
[
	final(bool) : "Final zap (kills NPCs)" : 0
]

@ModelAnimEvent = AE_HEADCRAB_FLIPPED
[
	flipped(bool): "Flipped" : 0
]

@ModelAnimEvent = AE_HAPTIC_PULSE
[
	haptic_effect_name(string): "Effect Name" : "haptic_pulse_medium"
	scale(float): "Effect Scale" : 1
]

@ModelAnimEvent = AE_NPC_START_POWERED_RAGDOLL
[
	pose_control_type(choices): "Pose control type" : 1 = 
	[
		"NoPoseControl" : "None"
		"AbsolutePoseControl" : "Absolute"
		"RelativePoseControl" : "Relative"
	]
	frequency(float): "Spring frequency (0-30)" : 10
	damping_ratio(float): "Spring damping ratio (0-2)" : 1
	decay_duration(float): "Spring decay duration time" : -1
	decay_bias(float): "Spring decay bias" : "0.5"
]

@ModelAnimEvent = AE_NPC_END_POWERED_RAGDOLL
[
]